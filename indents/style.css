.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 15px;
}
.example {
    display: flex;
    justify-content: center;
    align-items: center;
}
.example .square {
    width: 300px;
    height: 300px;
    background-color: #ccc;
}

/*
 padding — Внутренние отступы элемента
 margin — Внешние отступы от элемента


 свойства margin и padding похожи между собой, но работают немного по разному.

 padding - устанавливает внутренни отступы элемента, тем самым увеличивая его
 размеры.

 Посмотрим пример:
*/


.example .square {
    /* Определяем каждый отступ отдельно */

    /*padding-top: 50px;*/
    /*padding-right: 50px;*/
    /*padding-bottom: 50px;*/
    /*padding-left: 50px;*/


    /*
    4 значения

     Комбинируем определение отступов, при такой записи отступы будут определятся
     по часовой стрелке. В порядке приведенном выше.
    */

    /* padding: 50px 50px 50px 50px; */


    /* Три значения - устанавливает отступы сверху, по горизонтали и снизу */

    /* padding: 50px 50px 50px; */


    /* Одно значение - устанавливает одинаковый отступ по всем сторонам сразу. */

    padding: 50px;

}

/* В итоге если мы можем гибко настраивать padding с той стороны с которой нам нужно */



/*
 Margin

 Имеет аналогичные сокращения значений как и padding. Свойство margin не влияет на
 размеры элемента, но на место отступов созданных с помощью margin не могут становиться
 другие элементы.
*/


.example .square {
    margin: 20px;
    /*margin-top: 20px;*/
    /*margin-right: 20px;*/
    /*margin-bottom: 20px;*/
    /*margin-left: 20px;*/
}

/*
 Схлопывание margin

 Вы можете попасть в такую ситуацию когда у нескольких соседствующих элементов
 присутствуют margin. В таком случае они будут накладываться друг на друга
 и будет выбран тот margin который больше.
*/

.example2 .square-top,
.example2 .square-bottom {
    width: 500px;
    height: 500px;
    margin: 0 auto;
    border: 10px solid rebeccapurple;
}

.example2 .square-top {
    background-color: paleturquoise;
    margin-bottom: 10px;
}


.example2 .square-bottom {
    background-color: palegreen;
    margin-top: 30px;
}







/*
  Border

  Свойство border аналогично свойство padding увеличивает размер элемента, также
  свойству border мы можем задать ширину, стиль и цвет.
*/

.example .square {
    /* Скомбинированное свойство */
    border: 10px solid palegreen;

    /*  Задаем ширину отдельно  */
    /*border-width: 20px;*/


    /*  Задаем тип отдельно  */
    /* border-style: dashed; */

    /*  Задаем цвет отдельно  */
    /* border-color: paleturquoise; */


    /*
    Также мы можем получить доступ к каждому отдельному бордеру с нужной нам
    стороны и стилизовать его.

    Пример:
    */

    /*border-bottom: 10px solid black;*/

    /*
        Похожим образом мы можем стилизовать все границы нашего элемента,
        также в CSS достаточно много свойств связанных с стилизацией border,
        о них читайте в документации.
    */
}


/*
    По итогу мы выяснили, что по-умолчанию на видимый пользователю размер элемента
    влияют свойства: width, height, padding, border;

    Например, для того чтобы получить итоговую ширину элемента нам нужно учесть
    значение свойства:

     width + padding(left + right) + border(left + right)

    Используя такую формулу мы можем точно высчитывать актуальные размеры блока
    который верстаем.

    Достаточно неудобный процесс, так как нам постоянно нужно будет держать
    в голове множество информации, а блоков у нас на сайте и без того может быть
    много. Было бы более удобно, если бы мы могли задать ширину элементу
    через свойство width и не волноваться что элемент будет изменяться в
    зависимости от padding и border.

    Для этого существует свойство box-sizing, его работа заключается в том чтобы
    определить как именно будет вычисляться размер элемента и будут ли влиять
    padding и border на конечный его размер.

    Свойство box-sizing может иметь  одно из двух значений:

    content-box — значение по умолчанию. Значения padding и border будут
    добавлены к ширине блока.

    border-box — Значения padding и border не будут добавлены к ширине блока.

    Правило box-sizing: border-box используется часто при верстке сайтов так как
    сильно упрощает работу с элементами, мы тоже будем его использовать.


    Для того чтобы обратится сразу ко всем элементам и добавить и это свойство
    напишем следующее правило.
*/

/** {*/
/*    box-sizing: border-box;*/
/*}*/